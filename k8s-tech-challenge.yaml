apiVersion: v1
kind: ConfigMap
metadata:
  name: message-config
data:
  message: "Michael"

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: tech-challenge
spec:
  replicas: 3
  minReadySeconds: 15
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      name: tech-challenge
      labels:
        app: tech-challenge
    spec:
      containers:
      - image: i322669/tech-challenge:{{BUILD_NUMBER}}
        env:
        - name: MESSAGE
          valueFrom:
            configMapKeyRef:
              name: message-config
              key: message
        name: tech-challenge
        volumeMounts:
        - name: temp
          mountPath: /tmp
          readOnly: true
        readinessProbe:
          periodSeconds: 1
          httpGet:
            path: /
            port: 3000
        livenessProbe:
          failureThreshold: 1
          timeoutSeconds: 11 # Set it to 11 seconds because there's a 10 sec sleep in func Health, it doesn't make sense though, the code need tobe enhanced.
          periodSeconds: 15
          httpGet:
            path: /health
            port: 3000
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
      volumes:
      - name: temp
        emptyDir: {}

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: tech-challenge
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tech-challenge
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
apiVersion: v1
kind: Service
metadata:
  name: tech-challenge
spec:
  type: LoadBalancer
  selector:
    app: tech-challenge
  ports:
    - port: 3000
      targetPort: 3000

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: tech-challenge
spec:
  tls:
    - hosts:
        - tech-challenge.example.com
      secretName: tls-secret # openssl genrsa -out tls.key 2048; openssl req -new -x509 -key tls.key -out tls.cert -days 360 -subj /CN=tech-challenge.example.com; kubectl create secret tls tls-secret --cert=tls.cert --key=tls.key
  rules:
    - host: tech-challenge.example.com
      http:
        paths:
          - path: /
            backend:
              serviceName: tech-challenge
              servicePort: 3000